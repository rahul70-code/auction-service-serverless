service: auction-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 256
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:eu-west-1:991785523771:table/AuctionsTable
        - arn:aws:dynamodb:eu-west-1:991785523771:table/AuctionsTable/index/statusAndEndDate # for secondary index quering

resources:
  Resources: 
    AuctionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AuctionsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: endingAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH 
        GlobalSecondaryIndexes:
          - IndexName: statusAndEndingAt
            KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: endingAt
              KeyType: RANGE
            Projection:
              ProjectionType: ALL
functions:
  createAuction:
    handler: api/createAuction.handler
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http: 
          path: auction
          method: post
          authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: api/getAuctions.handler
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http: 
          path: auctions
          method: GET
          authorizer: ${self:custom.authorizer}
  getAuction:
    handler: api/getAuction.handler
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http: 
          path: /auction/{id}
          method: GET
          authorizer: ${self:custom.authorizer}
  placeBid:
    handler: api/placeBid.handler
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http: 
          path: /auction/{id}/bid
          method: PATCH
          authorizer: ${self:custom.authorizer}
  processAuctions:
    handler: api/processAuctions.handler
    memorySize: 128
    description: Submit candidate information and starts interview process.
    # events:
    #   - schedule: rate(15 minute) 

custom:
  authorizer: "auth service ARN deployed on same AWS account"
  bundle:
    linting: false